generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id     String @id @default(uuid())
  title  String
  userId String

  imageId String
  image   BoardImage @relation(fields: [imageId], references: [id])

  List      List[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([imageId])
}

model AuditLog {
  id       String @id @default(uuid())
  action   ACTION
  entityId String
  entity   Entity @relation(fields: [entityId], references: [id])

  userId    String
  userImage String
  userName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([entityId])
}

model Entity {
  id       String      @id
  type     ENTITY_TYPE
  title    String
  auditLog AuditLog[]
}

model BoardImage {
  id       String  @id
  thumbUrl String
  fullUrl  String
  userName String
  linkHTML String
  board    Board[]
}

model List {
  id    String @id @default(uuid())
  title String
  order Int

  boardId String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String  @id @default(uuid())
  title       String
  order       Int
  description String? @db.Text()

  list   List?   @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}
